[gd_resource type="VisualShader" load_steps=10 format=2]

[ext_resource path="res://assets/attacks/attack-zone.png" type="Texture" id=1]

[sub_resource type="VisualShaderNodeScalarFunc" id=12]
function = 31

[sub_resource type="VisualShaderNodeBooleanUniform" id=22]
uniform_name = "swap_color"

[sub_resource type="VisualShaderNodeTexture" id=13]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeVectorDecompose" id=14]

[sub_resource type="VisualShaderNodeVectorCompose" id=15]

[sub_resource type="VisualShaderNodeScalarOp" id=16]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=17]
default_input_values = [ 0, 0.0, 1, 1.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=18]
operator = 2

[resource]
code = "shader_type canvas_item;
uniform sampler2D tex_frg_2;
uniform bool swap_color;



void vertex() {
// Output:0

}

void fragment() {
// Texture:2
	vec4 tex_frg_2_read = texture(tex_frg_2, UV.xy);
	vec3 n_out2p0 = tex_frg_2_read.rgb;
	float n_out2p1 = tex_frg_2_read.a;

// VectorDecompose:3
	float n_out3p0 = n_out2p0.x;
	float n_out3p1 = n_out2p0.y;
	float n_out3p2 = n_out2p0.z;

// BooleanUniform:12
	bool n_out12p0 = swap_color;

// ScalarOp:5
	float n_out5p0 = n_out3p0 * (n_out12p0 ? 1.0 : 0.0);

// ScalarFunc:10
	float n_out10p0 = 1.0 - (n_out12p0 ? 1.0 : 0.0);

// ScalarOp:6
	float n_out6p0 = n_out3p1 * n_out10p0;

// ScalarOp:7
	float n_in7p1 = 0.00000;
	float n_out7p0 = n_out3p2 * n_in7p1;

// VectorCompose:4
	vec3 n_out4p0 = vec3(n_out5p0, n_out6p0, n_out7p0);

// Output:0
	COLOR.rgb = n_out4p0;
	COLOR.a = n_out2p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -393.608, 27.9963 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 680, 540 )
nodes/fragment/2/node = SubResource( 13 )
nodes/fragment/2/position = Vector2( -380, 460 )
nodes/fragment/3/node = SubResource( 14 )
nodes/fragment/3/position = Vector2( -160, 360 )
nodes/fragment/4/node = SubResource( 15 )
nodes/fragment/4/position = Vector2( 580, 320 )
nodes/fragment/5/node = SubResource( 16 )
nodes/fragment/5/position = Vector2( 180, 180 )
nodes/fragment/6/node = SubResource( 17 )
nodes/fragment/6/position = Vector2( 160, 300 )
nodes/fragment/7/node = SubResource( 18 )
nodes/fragment/7/position = Vector2( 140, 420 )
nodes/fragment/10/node = SubResource( 12 )
nodes/fragment/10/position = Vector2( -120, 240 )
nodes/fragment/12/node = SubResource( 22 )
nodes/fragment/12/position = Vector2( -340, 100 )
nodes/fragment/connections = PoolIntArray( 2, 1, 0, 1, 2, 0, 3, 0, 4, 0, 0, 0, 5, 0, 4, 0, 3, 1, 6, 0, 6, 0, 4, 1, 3, 2, 7, 0, 7, 0, 4, 2, 10, 0, 6, 1, 12, 0, 5, 1, 12, 0, 10, 0, 3, 0, 5, 0 )
